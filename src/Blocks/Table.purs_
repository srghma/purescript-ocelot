module Ocelot.Block.Table where

import Prelude

import TailwindClasses as TailwindClasses
import DOM.HTML.Indexed (HTMLtable, HTMLtd, HTMLth, HTMLtr)
import Halogen.HTML (HTML, IProp)
import Halogen.HTML as HH
import Ocelot.Block.Builder (blockBuilder)

tableClasses :: Array HH.ClassName
tableClasses =
  [ TailwindClasses.w_full
  , TailwindClasses.text_left
  , TailwindClasses.border_collapse
  ]

table
  :: ∀ p i
   . Array (IProp HTMLtable i)
  -> Array (HTML p i)
  -> HTML p i
table = blockBuilder HH.table tableClasses

table_
  :: ∀ p i
   . Array (HTML p i)
  -> HTML p i
table_ = table []

row
  :: ∀ p i
   . Array (IProp HTMLtr i)
  -> Array (HTML p i)
  -> HTML p i
row = HH.tr

row_
  :: ∀ p i
   . Array (HTML p i)
  -> HTML p i
row_ = HH.tr_

headerClasses :: Array HH.ClassName
headerClasses =
  [ TailwindClasses.bg_grey_90
  , TailwindClasses.py_4
  , TailwindClasses.px_5
  , TailwindClasses.font_medium
  , TailwindClasses.text_black_20
  ]

header
  :: ∀ p i
   . Array (IProp HTMLth i)
  -> Array (HTML p i)
  -> HTML p i
header = blockBuilder HH.th headerClasses

header_
  :: ∀ p i
   . Array (HTML p i)
  -> HTML p i
header_ = header []

cellClasses :: Array HH.ClassName
cellClasses =
  [ TailwindClasses.bg_white
  , TailwindClasses.p_5
  , TailwindClasses.min_h_20
  , TailwindClasses.border_b
  , TailwindClasses.border_grey_95
  ]

cell
  :: ∀ p i
   . Array (IProp HTMLtd i)
  -> Array (HTML p i)
  -> HTML p i
cell = blockBuilder HH.td cellClasses

cell_
  :: ∀ p i
   . Array (HTML p i)
  -> HTML p i
cell_ = cell []
