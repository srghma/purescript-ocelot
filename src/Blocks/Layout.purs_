module Ocelot.Block.Layout where

import Prelude

import TailwindClasses as TailwindClasses
import DOM.HTML.Indexed (HTMLdiv)
import Halogen.HTML as HH
import Ocelot.Block.Builder (blockBuilder)

popoverClasses :: Array HH.ClassName
popoverClasses =
  [ TailwindClasses.absolute
  , TailwindClasses.shadow
  , TailwindClasses.z_50
  , TailwindClasses.border
  , TailwindClasses.border_gray_90
  , TailwindClasses.rounded
  ]

popover
  :: ∀ p i
   . Array (HH.IProp HTMLdiv i)
  -> Array (HH.HTML p i)
  -> HH.HTML p i
popover = blockBuilder HH.div popoverClasses

popover_
  :: ∀ p i
   . Array (HH.HTML p i)
  -> HH.HTML p i
popover_ = popover []

stickyClasses :: Array HH.ClassName
stickyClasses =
  [ TailwindClasses.fixed
  , TailwindClasses.top_0
  , TailwindClasses.inset_x_0
  , TailwindClasses.w_full
  , TailwindClasses.shadow_md
  , TailwindClasses.z_60
  ]

sticky
  :: ∀ p i
   . Array (HH.IProp HTMLdiv i)
  -> Array (HH.HTML p i)
  -> HH.HTML p i
sticky = blockBuilder HH.div stickyClasses

sticky_
  :: ∀ p i
   . Array (HH.HTML p i)
  -> HH.HTML p i
sticky_ = sticky []

containerClasses :: Array HH.ClassName
containerClasses =
  [ TailwindClasses.container
  , TailwindClasses.m_auto
  ]

container
  :: ∀ p i
   . Array (HH.IProp HTMLdiv i)
  -> Array (HH.HTML p i)
  -> HH.HTML p i
container = blockBuilder HH.div containerClasses

container_
  :: ∀ p i
   . Array (HH.HTML p i)
  -> HH.HTML p i
container_ = container []

sectionClasses :: Array HH.ClassName
sectionClasses =
  [ TailwindClasses.my_8
  ]

section
  :: ∀ p i
   . Array (HH.IProp HTMLdiv i)
  -> Array (HH.HTML p i)
  -> HH.HTML p i
section = blockBuilder HH.div sectionClasses

section_
  :: ∀ p i
   . Array (HH.HTML p i)
  -> HH.HTML p i
section_ = section []

gridClasses :: Array HH.ClassName
gridClasses =
  [ TailwindClasses.container
  , TailwindClasses.m_auto
  , TailwindClasses.p_8
  , TailwindClasses.flex
  ]

grid
  :: ∀ p i
   . Array (HH.IProp HTMLdiv i)
  -> Array (HH.HTML p i)
  -> HH.HTML p i
grid = blockBuilder HH.div gridClasses

grid_
  :: ∀ p i
   . Array (HH.HTML p i)
  -> HH.HTML p i
grid_ = grid []

columnClasses :: Array HH.ClassName
columnClasses =
  [ TailwindClasses.flex_1
  , TailwindClasses.p_8
  ]

column
  :: ∀ p i
   . Array (HH.IProp HTMLdiv i)
  -> Array (HH.HTML p i)
  -> HH.HTML p i
column = blockBuilder HH.div columnClasses

column_
  :: ∀ p i
   . Array (HH.HTML p i)
  -> HH.HTML p i
column_ = column []

mainClasses :: Array HH.ClassName
mainClasses =
  [ TailwindClasses.flex_3
  , TailwindClasses.p_8
  ]

main
  :: ∀ p i
   . Array (HH.IProp HTMLdiv i)
  -> Array (HH.HTML p i)
  -> HH.HTML p i
main = blockBuilder HH.div mainClasses

main_
  :: ∀ p i
   . Array (HH.HTML p i)
  -> HH.HTML p i
main_ = main []

sideClasses :: Array HH.ClassName
sideClasses =
  [ TailwindClasses.flex_2
  , TailwindClasses.p_8
  ]

side
  :: ∀ p i
   . Array (HH.IProp HTMLdiv i)
  -> Array (HH.HTML p i)
  -> HH.HTML p i
side = blockBuilder HH.div sideClasses

side_
  :: ∀ p i
   . Array (HH.HTML p i)
  -> HH.HTML p i
side_ = side []
