module Ocelot.Block.Toggle (toggle) where

import Prelude

import TailwindClasses as TailwindClasses
import DOM.HTML.Indexed (HTMLinput)
import DOM.HTML.Indexed.InputType (InputType(InputCheckbox))
import Halogen.HTML as HH
import Halogen.HTML.Properties as HP

type ToggleProps =
  { label :: String }

labelClasses :: Array HH.ClassName
labelClasses =
  [ TailwindClasses.flex
  , TailwindClasses.flex_row
  , TailwindClasses.items_center
  , TailwindClasses.inline_block
  , TailwindClasses.py_1
  , TailwindClasses.cursor_pointer
  , TailwindClasses.leading_loose
  , TailwindClasses.text_black_20
  ]

inputClasses :: Array HH.ClassName
inputClasses =
  [ HH.ClassName "checked:sibling:bg-blue-88"
  , HH.ClassName "checked:sibling:pl-5"
  , HH.ClassName "!checked:sibling:bg-grey-80"
  , HH.ClassName "!checked:sibling:pr-5"
  ]

toggleClasses :: Array HH.ClassName
toggleClasses =
  [ HH.ClassName "transition-1/8"
  , TailwindClasses.inline_flex
  , TailwindClasses.justify_center
  , TailwindClasses.items_center
  , TailwindClasses.content_box
  , TailwindClasses.h_5
  , TailwindClasses.w_5
  , TailwindClasses.p_1
  , TailwindClasses.rounded_full
  , TailwindClasses.mr_3
  , HH.ClassName "before:bg-white"
  , HH.ClassName "before:h-full"
  , HH.ClassName "before:w-full"
  , HH.ClassName "before:rounded-full"
  , HH.ClassName "before:no-content"
  , HH.ClassName "before:shadow"
  ]

toggle
  :: âˆ€ p i
   . Array (HH.IProp HTMLinput i)
  -> HH.HTML p i
toggle iprops =
  HH.label
    [ HP.classes labelClasses ]
    [ HH.input iprops'
    , HH.span [ HP.classes toggleClasses ] []
    ]
    where
      iprops' = iprops <>
        [ HP.classes inputClasses
        , HP.type_ InputCheckbox
        ]
