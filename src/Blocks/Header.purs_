module Ocelot.Block.Header where

import Prelude

import TailwindClasses as TailwindClasses
import DOM.HTML.Indexed (HTMLdiv)
import Data.Maybe (Maybe(..))
import Halogen.HTML as HH
import Halogen.HTML.Properties as HP
import Ocelot.Block.Layout as Layout
import Ocelot.Block.NavigationTab as NavigationTab
import Ocelot.HTML.Properties (css, (<&>))

outerClasses :: Array HH.ClassName
outerClasses =
  [ TailwindClasses.bg_black_10
  , TailwindClasses.w_full
  , TailwindClasses.px_6
  ]

innerClasses :: Array HH.ClassName
innerClasses =
  [ TailwindClasses.container
  , TailwindClasses.items_center
  , TailwindClasses.mx_auto
  , TailwindClasses.flex
  , TailwindClasses.h_24
  ]

header
  :: ∀ p i
   . Array (HH.IProp HTMLdiv i)
  -> Array (HH.HTML p i)
  -> HH.HTML p i
header iprops =
  HH.header [ HP.classes outerClasses ]
  <<< pure
  <<< HH.div ( [ HP.classes innerClasses ] <&> iprops )

header_
  :: ∀ p i
   . Array (HH.HTML p i)
  -> HH.HTML p i
header_ = header []

type FormHeaderProps p i =
  { buttons :: Array (HH.HTML p i)
  , name :: Array (HH.HTML p i)
  , title :: Array (HH.HTML p i)
  , brand :: Maybe String
  }

stickyFormHeader
  :: ∀ p i page
   . Eq page
  => FormHeaderProps p i
  -> NavigationTab.TabConfig page
  -> HH.HTML p i
stickyFormHeader hConfig tConfig =
  HH.div
    [ HP.classes [ TailwindClasses.h_40 ] ]
    [ HH.div
      [ HP.classes Layout.stickyClasses ]
      [ formHeader hConfig
      , NavigationTab.navigationTabs tConfig [ HP.classes [ TailwindClasses.px_16 ] ]
      ]
    ]

stickyHeader_ :: ∀ p i. FormHeaderProps p i -> HH.HTML p i
stickyHeader_ config =
  HH.div
    [ HP.classes [ TailwindClasses.h_24 ] ]
    [ HH.div
      [ HP.classes Layout.stickyClasses ]
      [ formHeader config ]
    ]

formHeader :: ∀ p i. FormHeaderProps p i -> HH.HTML p i
formHeader props =
  header_ $
    case props.brand of
      Just src  ->
        [ HH.div
          [ HP.classes [ TailwindClasses.w_16 ] ]
          [ HH.img [ HP.src src ] ]
        ]
      Nothing -> []
    <>
    [ HH.h2
      [ HP.classes [ TailwindClasses.flex_1, TailwindClasses.font_medium ] ]
        [ HH.span
            [ HP.classes [ TailwindClasses.text_lg, TailwindClasses.text_gray_70, TailwindClasses.mr_4 ] ]
            props.name
        , HH.span
            [ HP.classes [ TailwindClasses.text_lg, TailwindClasses.text_white ] ]
            props.title
        ]
    ]
    <>
    props.buttons
