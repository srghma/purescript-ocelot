module Ocelot.Block.FormPanel where

import Prelude

import TailwindClasses as TailwindClasses
import DOM.HTML.Indexed (HTMLbutton)
import Halogen.HTML as HH
import Halogen.HTML.Properties as HP

type FormPanelProps =
  { isOpen :: Boolean
  , renderToggle :: Boolean -> HH.PlainHTML
  }

buttonClasses :: Array HH.ClassName
buttonClasses =
  [ TailwindClasses.font_medium
  , TailwindClasses.no_outline
  , TailwindClasses.text_blue_82
  ]

formPanel
  :: âˆ€ p i
   . FormPanelProps
  -> Array (HH.IProp HTMLbutton i)
  -> Array (HH.HTML p i)
  -> HH.HTML p i
formPanel props iprops html =
  HH.div
    [ HP.class_ (TailwindClasses.w_full) ]
    [ HH.div
        [ HP.classes contentClasses ]
        html
    , HH.button
        (iprops <> [ HP.classes buttonClasses ])
        [ (HH.fromPlainHTML (props.renderToggle props.isOpen)) ]
    ]
  where
    contentClasses =
      if props.isOpen
        then [ TailwindClasses.mb_6 ]
        else [ TailwindClasses.hidden ]
